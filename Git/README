GitClone
--------

Overview:
This is a helper function for cloning the GIT repositories.
For example:

    include(GitClone)
    Core_Utility_CloneRepository(GIT_REPOSITORY git@url.git)

Commands:
Core_Utility_CloneRepository:

    Core_Utility_CloneRepository(
      <GIT_REPOSITORY>
      [GIT_TAG, OUTPUT_DIRECTORY, GIT_CLONE_DEPTH,
       RESET_ON_DIRTY_REPO, UPDATE_SUBMODULES,
       APPLY_PATCH]
    )

The GIT_REPOSITORY argument is the only necessary one, which
specifies the git repository to clone.
On the second call with the same OUTPUT_DIRECTORY the exact
behavior is defined by RESET_ON_DIRTY_REPO, but it will
execute a git-pull on that repository anyway.

- GIT_REPOSITORY
  Repository url to clone.

- GIT_TAG
  The repository tag, branch, hash to clone. Default is empty.

- OUTPUT_DIRECTORY
  Directory in which to clone the repository, default is
  the CMAKE_BINARY_DIR/<REPO_NAME>.

- GIT_CLONE_DEPTH
  Sepcifies the git-clone depth, default is 1.

- RESET_ON_DIRTY_REPO
  Executes a git reset --hard on the repository if
  Core_Utility_CloneRepository called more than one time
  with the same GIT_REPOSITORY and OUTPUT_DIRECTORY.

- UPDATE_SUBMODULES
  Performs a git submodule udpate --init --recursive on the
  repository. [NOT IMPLEMENTED YET]

- APPLY_PATCH
  Uses git-apply to applying a patch file.

Example:

    include(GitClone)
    Core_Utility_CloneRepository(
      GIT_REPOSITORY https://git.code.sf.net/p/qwt/git
      GIT_TAG qwt-multiaxes
      OUTPUT_DIRECTORY /tmp/Qwt/Source
      RESET_ON_DIRTY_REPO on
    )
